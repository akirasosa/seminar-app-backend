import groovy.xml.MarkupBuilder
import org.jooq.util.GenerationTool

import javax.xml.bind.JAXB

buildscript {
	ext {
		kotlinVersion = '1.1.0'
		springBootVersion = '1.5.1.RELEASE'
		jooqVersion = '3.9.0'
		flywayVersion = '4.1.1'
		h2Version = '1.4.193'
		swaggerVersion = '2.6.1'
	}
	repositories {
		jcenter()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
		classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
		classpath "org.jooq:jooq-codegen:${jooqVersion}"
		classpath "com.h2database:h2:${h2Version}"
		classpath "gradle.plugin.com.boxfuse.client:flyway-release:${flywayVersion}"
	}
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
// It's just needed for JOOQ codegen
apply plugin: "org.flywaydb.flyway"

jar {
	baseName = 'springboot-angular2-tutorial'
	version = '0.0.1'
}

sourceCompatibility = 1.8

repositories {
	jcenter()
}

dependencies {
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-jooq'
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools'
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlinVersion
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlinVersion
	compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.8.6'
	compile group: 'org.jooq', name: 'jooq', version: jooqVersion
	compile group: 'org.flywaydb', name: 'flyway-core', version: flywayVersion
	compile group: 'com.zaxxer', name: 'HikariCP'
	runtime group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.5.8'
	runtime group: 'com.h2database', name: 'h2', version: h2Version
}

flyway {
	url = 'jdbc:h2:./db/tmp;MODE=MySQL'
	user = 'sa'
	password = ''
}

task jooqGenerate {
	doLast {
		def writer = new StringWriter()
		new MarkupBuilder(writer)
				.configuration('xmlns': "http://www.jooq.org/xsd/jooq-codegen-${jooqVersion}.xsd") {
			jdbc {
				driver 'org.h2.Driver'
				url 'jdbc:h2:./db/tmp;MODE=MySQL'
				user 'sa'
				password ''
			}
			generator {
				database {
					inputSchema 'public'
					outputSchemaToDefault 'true'
				}
				generate {
				}
				target {
					packageName 'com.example.generated'
					directory 'src/main/java'
				}
			}
		}
		GenerationTool.generate(
				JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
		)
	}
}
jooqGenerate.dependsOn flywayMigrate
